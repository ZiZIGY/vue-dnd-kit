import{u as F,c as C}from"./chunks/theme.CGsqnEIG.js";import{E as u}from"./chunks/ExampleContainer.DM9vPuwj.js";import{d as m,b as B,o as d,w as b,j as i,n as E,k as n,_ as D,c as f,G as A,ap as v,a as t}from"./chunks/framework.CM7R_tuH.js";const w={class:"container"},x=m({__name:"Example",setup(o){const{elementRef:h,handleDragStart:s,isDragging:g}=F({sensor:{setup:l=>{var k,r;const a=((k=l.pointerPosition.current.value)==null?void 0:k.x)??0,e=((r=l.pointerPosition.current.value)==null?void 0:r.y)??0,p=document.elementsFromPoint(a,e);return p.length>0?p:null}}}),{elementRef:y,isOvered:c}=C({events:{onDrop:()=>alert("dropped")}});return(l,a)=>(d(),B(u,null,{default:b(()=>[i("div",w,[i("div",{ref_key:"elementRef",ref:h,onPointerdown:a[0]||(a[0]=(...e)=>n(s)&&n(s)(...e)),class:E(["draggable-item",{"is-dragging":n(g)}])}," drag me ",34),i("div",{ref_key:"droppableRef",ref:y,class:E(["droppable",{"is-overed":n(c)}])}," drop zone ",2)])]),_:1}))}}),q=D(x,[["__scopeId","data-v-8332a06d"]]),z=JSON.parse('{"title":"Custom Collision Sensor","description":"","frontmatter":{},"headers":[],"relativePath":"examples/advanced/custom-sensor.md","filePath":"examples/advanced/custom-sensor.md"}'),P={name:"examples/advanced/custom-sensor.md"},T=Object.assign(P,{setup(o){return(h,s)=>(d(),f("div",null,[s[0]||(s[0]=i("h1",{id:"custom-collision-sensor",tabindex:"-1"},[t("Custom Collision Sensor "),i("a",{class:"header-anchor",href:"#custom-collision-sensor","aria-label":'Permalink to "Custom Collision Sensor"'},"​")],-1)),s[1]||(s[1]=i("p",null,"This example demonstrates how to implement a custom collision detection sensor to change how draggable elements interact with drop zones.",-1)),s[2]||(s[2]=i("h2",{id:"overview",tabindex:"-1"},[t("Overview "),i("a",{class:"header-anchor",href:"#overview","aria-label":'Permalink to "Overview"'},"​")],-1)),s[3]||(s[3]=i("p",null,[t("The default collision detection algorithm in Vue DnD Kit is powerful and works well for most scenarios, but sometimes you might need more specialized behavior. This example shows how to replace the default collision detection with a custom implementation using the browser's native "),i("code",null,"document.elementsFromPoint()"),t(" method.")],-1)),A(q),s[4]||(s[4]=v("",26))]))}});export{z as __pageData,T as default};
